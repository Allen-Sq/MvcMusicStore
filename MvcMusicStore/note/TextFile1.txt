2017-07-04mvcmusicstore工作内容和笔记
1、使用自定义帮助类截取文本内容，这个助手方法取得一个字符串和一个最大长度，如果字符串长度小于指定的长度，
就直接返回这个串，如果大于最大长度，那么，就截断字符串，然后在剩下的最后增加 “…”。
@helper Truncate(string input, int length)
    {
        if (input.Length <= length)
        {
			@input
        }
        else
        {
			@input.Substring(0, length)<text>...</text>
        }
}
另外，还需在下面的列表中替换@Html.DisplayFor(modelItem => item.Title)
变为@Truncate(item.Title,25)，表示最大字符25，超过就截取。
（这个助手方法位置放在需要使用截取功能的cshtml页面中即可，定义完后再调用）

2、如果有经常需要使用的命名空间，又不想每次都去using它，那么有一个简便的方法，可以在web.config中统一定义，增加如下代码：
<namespaces>
	<add namespace="System.Web.Mvc"/>
	<add namespace="System.Web.Mvc.Ajax"/>
    <add namespace="System.Web.Mvc.Html"/>
	<add namespace="System.Web.Routing"/>
	<add namespace="MvcMusicStore.Helpers"/>
</namespaces>

3、通过为模型类增加数据描述的 DataAnnotations ，我们可以容易地为应用程序增加验证的功能。DataAnnotations  允许我们描述希望应用在模型属性上的验证规则，
ASP.NET MVC 将会使用这些 DataAnnotations ，然后将适当的验证信息返回给用户。(但是注意这是服务端验证)
（1）为专辑表单增加验证：
我们将会使用下列的 DataAnnotations
    Required 必须 – 表示这个属性是必须提供内容的字段
    DisplayName 显示名 – 定义表单字段的提示名称
    StringLength 字符串长度 – 定义字符串类型的属性的最大长度
    Range 范围 – 为数字类型的属性提供最大值和最小值
    Bind 绑定 – 列出在将请求参数绑定到模型的时候，包含和不包含的字段
    ScaffoldColumn 支架列 - 在编辑表单的时候，需要隐藏起来的的字符
（2）打开 Album 类，首先增加下面的 using 语句，这些语句引用了 DataAnnotations  使用的命名空间。
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Web.Mvc;
（3）更新属性，增加显示和验证的 DataAnnotations
        [Required(ErrorMessage = "Price is required")]
        [Range(0.01, 100.00,ErrorMessage = "Price must be between 0.01 and 100.00")]
        public decimal Price { get; set; }
        [DisplayName("Album Art URL")]
        [StringLength(1024)]
	    public virtual string AlbumArtUrl { get; set; }
具体参考Model.Album.cs文件。

4、服务器端验证非常重要，因为用户可能绕过了客户端验证，实际上，Web 页面仅仅实现服务器端验证存在三个显著的问题：
   （1）在提交表单的时候，用户必须等待，验证在服务器端进行，需要将验证的结果发送回浏览器。
   （2）用户不能在输入错误的时候立即得到回应，以便通过验证规则的检查。
   （3）我们把可以在浏览器完成的工作交给了服务器，浪费了服务器的资源。 
ASP.NET MVC3 支架模板还提供了内建的客户端验证，不需要我们做额外的工作就可以使用。
但是，需要注意几点：
（1）页面中引进jQuery脚本
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
（2）在web.config中，已经默认支持了客户端验证
  <appSettings>
    <add key="ClientValidationEnabled" value="true"/> 
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/> 
  </appSettings>

  5、增加站点管理的访问限制
  （1）在VS2013以上版本中，菜单项中无法找到asp.NET配置工具选项了，但是我们可以通过以下设置来使用该配置工具
  （2）替代方法：
  打开命令提示符
  ->切换到实际安装有iisexpress命令的目录下，C:\Program Files\IIS Express，其中cd..可返回上一级
  ->输入Iisexpress.exe /path:C:\Windows\Microsoft.net\Framework\v4.0.30319\ASP.NETWebAdminFiles /vpath:"/ASP.NETWebAdminFiles" /port:51846 /clr:4.0 /ntlm
  Port后面跟着我们在IISExpress中空闲的任何端口，此处我们使用的是51846端口号，如果冲突可以改一个。
  ->当出现“Enter 'Q' to stop Express”时，不要理会
  ->打开浏览器，在浏览器中输入下面地址，就可以使用配置工具了：http://localhost:8088/asp.netwebadminfiles/default.aspx?applicationPhysicalPath=[替换为需要使用配置工具的项目或站点的文件夹的绝对路径]&applicationUrl=/
  http://localhost:51846/asp.netwebadminfiles/default.aspx?applicationPhysicalPath=F:\%E5%AD%A6%E4%B9%A0%E6%96%87%E6%A1%A3\visual%20studio%202013\Projects\MvcMusicStore\MvcMusicStore&applicationUrl=/
  （3）如果在浏览器输入地址访问后，会弹出“身份验证信息框”，让你输入用户名和密码时，可以采取以下步骤：
  在IE浏览器的Internet选项中选择安全->自定义级别->拉到最下方，在用户身份验证，登录选择“自动使用当前用户名和密码登录”
  在运行框中输入gpedit.msc打开组策略编辑器->管理模板->Windows组件->Internet控制面板->安全页->Internet区域->登录选项->双击打开，选择已启用，并设置登录选项为“自动使用当前用户名和密码登录”->确定
（4）失败
输入以上网址可以进入“asp.net 网站管理工具”，但是选择“安全”选项卡时会出现以下错误：
选定的数据存储区出现问题，原因可能是服务器名称或凭据无效，或者权限不足。也可能是未启用角色管理器功能造成的。请单击下面的按钮，以重定向到可以选择新数据存储区的页面。 
下面的消息可能会有助于诊断问题: 无法连接到 SQL Server 数据库。
已经尝试过的方法：
	1、开始->所有程序->visual studio 2013->visual studio Tools->选择VS2013开发人员命令提示->输入“aspnet_regsql”打开数据库配置工具窗口，配置好数据库，用作权限管理
	2、打开IIS信息服务管理器->单击default website->在ASP.NET中选择“连接字符串“->配置连接字符串LocalSqlServer为刚刚配置好的数据库的名字
    3、进入C:\Windows\Microsoft.NET\Framework找到对应的版本，然后进入Config文件夹，会有一个machine.config文件，打开这个文件会找到：
<connectionStrings>
	<add name="LocalSqlServer" connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true" providerName="System.Data.SqlClient"/>
</connectionStrings>
这个连接字符串实际上是刚才那个<默认>数据库的连接字符串由于我选择的数据库是StuDB所以这个连接字符串不正确，把这个连接字符串修改为aspnetdb的：
<connectionStrings>
<add name="LocalSqlServer" connectionString="server=.;database=aspnetdb;uid=sa;pwd=sa" providerName="System.Data.SqlClient"/>
</connectionStrings>